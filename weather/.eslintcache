[{"/Users/ryanla/Desktop/React-WebApp/weather/src/components/Searchbox.js":"1","/Users/ryanla/Desktop/React-WebApp/weather/src/components/LocationBox.js":"2","/Users/ryanla/Desktop/React-WebApp/weather/src/App.js":"3","/Users/ryanla/Desktop/React-WebApp/weather/src/reportWebVitals.js":"4","/Users/ryanla/Desktop/React-WebApp/weather/src/states.js":"5","/Users/ryanla/Desktop/React-WebApp/weather/src/index.js":"6","/Users/ryanla/Desktop/React-WebApp/weather/src/components/Scroll.js":"7"},{"size":6705,"mtime":1608194195519,"results":"8","hashOfConfig":"9"},{"size":7551,"mtime":1608188228427,"results":"10","hashOfConfig":"9"},{"size":1139,"mtime":1608187378517,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1606691558235,"results":"12","hashOfConfig":"9"},{"size":279526,"mtime":1608187780686,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1606691558234,"results":"14","hashOfConfig":"9"},{"size":305,"mtime":1608273223127,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1zayco",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ryanla/Desktop/React-WebApp/weather/src/components/Searchbox.js",[],"/Users/ryanla/Desktop/React-WebApp/weather/src/components/LocationBox.js",["32","33"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// Styling of our website guided by material UI\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 750,\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2),\n        // remove paddingTop if dont want scroll\n        paddingTop: theme.spacing(0),\n        flexGrow: 1,\n        fontSize: \"1.25rem\"\n    },\n    paper: {\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2)\n      },\n    item: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n    item_first:{\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_second:{\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_third:{\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    item_fourth:{\n        padding: theme.spacing(2),\n        paddingBottom: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_fifth:{\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_sixth:{\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_location:{\n        color: theme.palette.text.primary,\n    },\n    item_date:{\n        color: theme.palette.text.primary,\n    },\n    item_time:{\n        color: theme.palette.text.primary,\n        textAlign: \"right\"\n    },\n    item_feels:{\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(0),\n        color: theme.palette.text.secondary\n    },\n    item_warning:{\n        padding: theme.spacing(2),\n        paddingTop: theme.spacing(0),\n        color: \"red\"\n    },\n    item_temperature:{\n        fontSize: \"3.25rem\",\n        color: theme.palette.text.primary,\n    },\n    item_description:{\n        color: theme.palette.text.primary,\n        paddingTop: theme.spacing(3.5)\n    }\n  }));\n\n\nfunction LocationBox({weather}) {\n    \n    // Retrieves months, days, etc to display\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        \n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n        \n        return `${day} ${date} ${month} ${year}`;\n    }\n\n    const time = new Date().toLocaleTimeString();\n  \n    // function handle(num){\n    //     return num * 1000\n    // }\n    {/* <div>The weather is {handle(weather.main.temp)}˚F</div> */}\n\n    const classes = useStyles();\n\n    return(\n        <div className={classes.root}>\n                {/* If the weather.main is not underfined, we will display the weather card */}\n                {(typeof weather.main != \"undefined\") ? (\n                    <Paper className={classes.paper} >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} container>\n                                <Grid item xs={6} className={`${classes.item_first} ${classes.item_location}`}>{weather.name}, {weather.sys.country}</Grid>\n                                <Grid item xs={1}></Grid>\n                                <Grid item xs={5} className={`${classes.item_first} ${classes.item_time}`}> {time}</Grid>\n                            </Grid>\n                            {/* ---------------- */}\n                            <Grid item xs={12} container>\n                                <Grid item className={`${classes.item_second} ${classes.item_date}`}>\n                                    {dateBuilder(new Date())}\n                                </Grid>\n                            </Grid>\n                            {/* ---------------- */}\n                            <Grid item xs={3} container>\n                                <Grid item className={`${classes.item_third} ${classes.item_temperature}`}>\n                                    <strong>{Math.round(weather.main.temp)}˚F</strong>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={5} container>\n                                <Grid\n                                    direction=\"column\"\n                                    container\n                                >\n                                    <Grid item className={`${classes.item_third} ${classes.item_description}`}>{weather.weather[0].main}</Grid>\n                                    <Grid item className={classes.item_feels}>Feels like {weather.main.feels_like}˚F</Grid>\n                                    {/* If one of these weather conditions appear, it will trigger a dangerous condition response */}\n                                    {(weather.weather[0].main === (\"Thunderstorm\" || \"Fog\" || \"Sand\" || \"Dust\" || \"Ash\" || \"Tornado\")) ?                  \n                                        <Grid item container>\n                                            <Grid item className={classes.item_warning}>Dangerous conditions!</Grid>\n                                        </Grid> \n                                    :('')}\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={4} container>\n                                <Grid item className={classes.item}>\n                                    <img className=\"icon\" src = {`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} style={{width: 75, height: 75}}></img>\n                                </Grid>\n                            </Grid>\n                            {/* ---------------- */}\n                            <Grid item xs={12} container>\n                                <Grid item xs={6} className={classes.item_fourth}>High: <span style={{color:\"black\"}}>{weather.main.temp_max}˚F</span></Grid>\n                                <Grid item xs={6} className={classes.item_fourth}>Humidity: <span style={{color:\"black\"}}>{weather.main.humidity}%</span></Grid>\n                            </Grid>\n                            <Grid item xs={12} container>\n                                <Grid item xs={6} className={classes.item_fifth}>Low: <span style={{color:\"black\"}}>{weather.main.temp_min}˚F </span></Grid>\n                                <Grid item xs={6} className={classes.item_fifth}>Pressure: <span style={{color:\"black\"}}>{weather.main.pressure} hPa </span></Grid>\n                            </Grid>\n                            <Grid item xs={12} container>\n                                <Grid item xs={6} className={classes.item_sixth}>Wind Speed: <span style={{color:\"black\"}}>{weather.wind.speed} miles/hr</span></Grid>\n                                <Grid item xs={6} className={classes.item_sixth}>Cloudiness: <span style={{color:\"black\"}}>{weather.clouds.all}%</span></Grid>\n                            </Grid>\n                        </Grid>\n                        \n                    </Paper>\n                ): ('')}\n        </div>\n    );\n}\n\nexport default LocationBox;\n\n\n\n","/Users/ryanla/Desktop/React-WebApp/weather/src/App.js",["34"],"import React from \"react\";\nimport Searchbox from \"./components/Searchbox.js\"\nimport LocationBox from \"./components/LocationBox.js\"\nimport Background from \"./weather2.jpg\"\nimport {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflow: \"hidden\",\n    minHeight: '100vh',\n    backgroundImage: `url(${Background})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: \"cover\"\n  },\n}));\n\n// API key and base URL\nconst api = {\n    key: \"f4519cec440c722ca8e65e2fcd60e27b\",\n    // key:\"7f396124ecf2b4afc0dd7251b4e5c22e\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {/* Two main components */}\n      <Searchbox api={api} query={query} setQuery={setQuery} setWeather={setWeather} />\n      <LocationBox weather={weather}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ryanla/Desktop/React-WebApp/weather/src/reportWebVitals.js",[],"/Users/ryanla/Desktop/React-WebApp/weather/src/states.js",["35"],"/Users/ryanla/Desktop/React-WebApp/weather/src/index.js",[],"/Users/ryanla/Desktop/React-WebApp/weather/src/components/Scroll.js",[],{"ruleId":"36","severity":1,"message":"37","line":106,"column":5,"nodeType":"38","messageId":"39","endLine":106,"endColumn":68},{"ruleId":"40","severity":1,"message":"41","line":150,"column":37,"nodeType":"42","endLine":150,"endColumn":165},{"ruleId":"43","severity":1,"message":"44","line":5,"column":19,"nodeType":"45","messageId":"46","endLine":5,"endColumn":28},{"ruleId":"47","severity":1,"message":"48","line":2,"column":22,"nodeType":"49","messageId":"50","endLine":5934,"endColumn":6},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray"]